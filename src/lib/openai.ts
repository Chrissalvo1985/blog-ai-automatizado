import OpenAI from 'openai'

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
})

export interface GeneratedContent {
  title: string
  summary: string
  content: string
  tags: string[]
  category: string
}

export async function generateBlogPost(topic: string, context?: string, customContent?: string): Promise<GeneratedContent> {
  console.log('ü§ñ OpenAI: Starting content generation for topic:', topic)
  if (context) console.log('üìù Context:', context)
  if (customContent) console.log('üìù CustomContent:', customContent)

  let prompt = `Crea un art√≠culo √∫nico e innovador sobre "${topic}".`
  if (context) {
    prompt += `\n\nTipo de contenido: ${context}. Adapta completamente el formato, estilo y estructura para crear una ${context} aut√©ntica y original.`
  }
  if (customContent) {
    prompt += `\n\nIntegra este contenido del autor de manera creativa y natural:\n"""${customContent}"""\nNo lo copies tal cual, transf√≥rmalo y exp√°ndelo creativamente.`
  }
  
  prompt += `\n\nENFOQUE TEM√ÅTICO OBLIGATORIO:
  El contenido DEBE conectar con al menos 2-3 de estas √°reas:
  - üöÄ Tecnolog√≠a emergente (IA, blockchain, IoT, realidad aumentada, etc.)
  - üí° Innovaci√≥n disruptiva y transformaci√≥n digital
  - üé® Creatividad y dise√±o en la era digital
  - üéì Educaci√≥n del futuro y aprendizaje continuo
  - üè¢ Negocios digitales y emprendimiento tech

  VARIEDAD ESTRUCTURAL OBLIGATORIA:
  NO uses la estructura t√≠pica de introducci√≥n-desarrollo-conclusi√≥n. En su lugar, elige UNA de estas estructuras creativas:
  
  1. **Formato Historia Personal**: Narra como una experiencia personal o caso de estudio
  2. **Formato Pregunta-Respuesta**: Estructura como una conversaci√≥n o entrevista
  3. **Formato Lista Innovadora**: Crea una lista numerada con an√°lisis profundo
  4. **Formato Comparativo**: Antes vs. Despu√©s, o comparaci√≥n de enfoques
  5. **Formato Futuro-Presente**: Comienza describiendo el futuro y regresa al presente
  6. **Formato Problema-Soluci√≥n**: Plantea desaf√≠os y m√∫ltiples soluciones
  7. **Formato Tendencias**: Analiza m√∫ltiples tendencias convergentes
  8. **Formato Mitos vs. Realidad**: Desmonta mitos y presenta la verdad
  9. **Formato Gu√≠a Pr√°ctica**: Pasos accionables con ejemplos reales
  10. **Formato Reflexi√≥n Filos√≥fica**: Perspectiva profunda sobre implicaciones

  REQUISITOS DE CALIDAD:
  - Espa√±ol nativo, tono conversacional pero profesional
  - Incluye datos espec√≠ficos, estad√≠sticas o ejemplos reales cuando sea posible
  - Usa met√°foras y analog√≠as creativas
  - Incluye al menos 3 subtemas espec√≠ficos relacionados
  - Integra tendencias actuales (2024)
  - Perspectiva latinoamericana cuando sea relevante
  - Incluye elementos visuales descriptivos (para mejorar engagement)
  - Llamadas a la acci√≥n espec√≠ficas y creativas
  - Longitud: 1000-1500 palabras
  - Formato markdown con elementos visuales (emojis, listas, citas)

  ORIGINALIDAD GARANTIZADA:
  - Evita frases clich√©s y lugares comunes
  - Incluye perspectivas contraintuitivas o √°ngulos √∫nicos
  - Conecta conceptos aparentemente no relacionados
  - Usa referencias culturales contempor√°neas
  - Incluye predicciones espec√≠ficas o hip√≥tesis audaces

  \nEstructura tu respuesta como JSON con estos campos:
  - title: T√≠tulo magn√©tico y espec√≠fico (m√°ximo 60 caracteres)
  - summary: Meta descripci√≥n que genere curiosidad (m√°ximo 160 caracteres)
  - content: Contenido completo en markdown siguiendo UNA estructura creativa
  - tags: 4-6 etiquetas espec√≠ficas y actuales
  - category: Elige entre: Tecnolog√≠a, Innovaci√≥n, Creatividad, Educaci√≥n, Negocios`

  try {
    console.log('ü§ñ OpenAI: Making API call...')
    
    // Verify API key exists
    if (!process.env.OPENAI_API_KEY) {
      throw new Error('OPENAI_API_KEY environment variable is not set')
    }

    if (process.env.OPENAI_API_KEY.includes('tu-cl') || process.env.OPENAI_API_KEY.includes('aqui')) {
      throw new Error('OPENAI_API_KEY appears to be a placeholder. Please set a real API key.')
    }

    const completion = await openai.chat.completions.create({
      model: 'gpt-4o-mini',
      messages: [
        {
          role: 'system',
          content: 'Eres un escritor experto en tecnolog√≠a e innovaci√≥n que crea contenido viral y educativo. Tu especialidad es combinar conceptos t√©cnicos con narrativas humanas. Generas contenido variado, nunca repetitivo, siempre enfocado en el futuro digital. Respondes √öNICAMENTE con JSON v√°lido.',
        },
        {
          role: 'user',
          content: prompt,
        },
      ],
      temperature: 0.9,
      max_tokens: 3000,
    })

    console.log('ü§ñ OpenAI: API call successful')

    const content = completion.choices[0]?.message?.content
    if (!content) {
      throw new Error('OpenAI returned empty content')
    }

    console.log('ü§ñ OpenAI: Content received, length:', content.length)

    // Clean the content to extract JSON
    let cleanContent = content.trim()
    
    // Remove markdown code blocks if present
    if (cleanContent.startsWith('```json')) {
      cleanContent = cleanContent.replace(/^```json\s*/, '').replace(/\s*```$/, '')
    } else if (cleanContent.startsWith('```')) {
      cleanContent = cleanContent.replace(/^```\s*/, '').replace(/\s*```$/, '')
    }

    console.log('ü§ñ OpenAI: Parsing JSON response...')
    let parsed: GeneratedContent
    
    try {
      parsed = JSON.parse(cleanContent) as GeneratedContent
    } catch (parseError) {
      console.error('‚ùå OpenAI: JSON parsing failed. Raw content:', cleanContent.substring(0, 500))
      throw new Error(`Failed to parse OpenAI response as JSON: ${parseError instanceof Error ? parseError.message : 'Unknown parsing error'}`)
    }
    
    // Validate required fields
    const requiredFields = ['title', 'summary', 'content', 'tags', 'category']
    const missingFields = requiredFields.filter(field => !parsed[field as keyof GeneratedContent])
    
    if (missingFields.length > 0) {
      console.error('‚ùå OpenAI: Missing required fields:', missingFields)
      throw new Error(`Generated content missing required fields: ${missingFields.join(', ')}`)
    }

    console.log('‚úÖ OpenAI: Content validation successful')
    return parsed
    
  } catch (error) {
    console.error('‚ùå OpenAI: Error generating blog post:', error)
    
    // Provide more specific error messages
    if (error instanceof Error) {
      if (error.message.includes('401')) {
        throw new Error('OpenAI API authentication failed. Please check your API key.')
      } else if (error.message.includes('429')) {
        throw new Error('OpenAI API rate limit exceeded. Please try again later.')
      } else if (error.message.includes('quota')) {
        throw new Error('OpenAI API quota exceeded. Please check your billing.')
      } else if (error.message.includes('insufficient_quota')) {
        throw new Error('OpenAI API insufficient quota. Please add credits to your account.')
      }
    }
    
    throw new Error(`Failed to generate blog post content: ${error instanceof Error ? error.message : 'Unknown error'}`)
  }
}

export async function generateTopicIdeas(count: number = 5): Promise<string[]> {
  const prompt = `Genera ${count} ideas de temas innovadores para art√≠culos de blog que sean tendencia en 2024.
  
  ENFOQUE OBLIGATORIO - Todos los temas deben estar relacionados con:
  üöÄ Tecnolog√≠a emergente (IA, blockchain, IoT, realidad aumentada, etc.)
  üí° Innovaci√≥n disruptiva y transformaci√≥n digital  
  üé® Creatividad y dise√±o en la era digital
  üéì Educaci√≥n del futuro y aprendizaje continuo
  üè¢ Negocios digitales y emprendimiento tech
  
  CRITERIOS ESPEC√çFICOS:
  - Actuales y relevantes para 2024
  - Angulo √∫nico o perspectiva contraintuitiva
  - Potencial viral para audiencia tech-savvy
  - Incluye tendencias emergentes
  - Enfoque en el mercado hispanohablante
  - Combina m√∫ltiples disciplinas
  - Potencial para generar debate constructivo
  
  EJEMPLOS del tipo de temas que necesito:
  - "C√≥mo la IA est√° reinventando el arte tradicional latinoamericano"
  - "El futuro del trabajo remoto: ciudades digitales vs. nomadismo tech"
  - "Blockchain m√°s all√° de las crypto: revolucionando la educaci√≥n"
  - "Por qu√© los freelancers est√°n construyendo el futuro econ√≥mico"
  - "La creatividad algor√≠tmica: cuando las m√°quinas aprenden a innovar"
  
  Devuelve √öNICAMENTE un array JSON de strings con temas espec√≠ficos y accionables.`

  try {
    const completion = await openai.chat.completions.create({
      model: 'gpt-4o-mini',
      messages: [
        {
          role: 'system',
          content: 'Eres un estratega de contenido especializado en tecnolog√≠a e innovaci√≥n. Generas ideas espec√≠ficas y trending que conectan m√∫ltiples disciplinas. Siempre respondes con JSON v√°lido.',
        },
        {
          role: 'user',
          content: prompt,
        },
      ],
      temperature: 0.95,
      max_tokens: 800,
    })

    const content = completion.choices[0]?.message?.content
    if (!content) {
      throw new Error('No topics generated')
    }

    return JSON.parse(content) as string[]
  } catch (error) {
    console.error('Error generating topic ideas:', error)
    throw new Error('Failed to generate topic ideas')
  }
} 